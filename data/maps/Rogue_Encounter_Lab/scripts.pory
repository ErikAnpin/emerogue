const NPC_BIRCH = 1
const FLAG_SELECTED_MON = FLAG_TEMP_4

mapscripts Rogue_Encounter_Lab_MapScripts {}


script Rogue_Encounter_Lab_SpeakProf
{
    lockall
    faceplayer

    if(flag(FLAG_SELECTED_MON))
    {
        msgbox(format("BIRCH: Hey {PLAYER}!\pDon't worry!\nI'll try my best to track down any more Pokémon that faint!"))
    }
    else
    {
        msgbox(format("BIRCH: Hi there!\nYou must be {PLAYER}!\pI managed to catch some of the Pokémon you had released!\pPlease feel free to take one of them with you.\pI'll look after the others."))
    }

    releaseall
}

script Rogue_Encounter_Lab_PokeballCommon
{
    if(flag(FLAG_SELECTED_MON) == FALSE)
    {
        turnobject(NPC_BIRCH, DIR_WEST)

        showmonpic(VAR_0x8001, 10, 3)
        playmoncry(VAR_0x8001, CRY_MODE_NORMAL)
        waitmoncry

        //bufferspeciesname(STR_VAR_1, VAR_0x8001)
        special(Rogue_BufferLabMonName)
        special(IsLegendarySpecies) // pulling species from 8001 and returning bool to 8003

        msgbox(format("BIRCH: You'd like to take {STR_VAR_1}?"), MSGBOX_YESNO)
        hidemonpic

        if(var(VAR_RESULT) == YES)
        {

            if(var(VAR_0x8003) == TRUE)
            {
                msgbox(format("Are you sure?\nLegendary Pokémon have been known to come back cursed."), MSGBOX_YESNO)
                if(var(VAR_RESULT) == NO)
                {
                    setvar(VAR_RESULT, NO)
                    return
                }
            }

            specialvar(VAR_TEMP_0, CalculatePlayerPartyCount)
            specialvar(VAR_TEMP_1, Rogue_CalcMaxPartySize)
            
            if(var(VAR_TEMP_0) >= VAR_TEMP_1)
            {
                msgbox(format("Oh it looks like you're going to need to release a Pokémon to make room."))
                //fadescreen(FADE_TO_BLACK)
                special(ChoosePartyMon)
                waitstate

                if(var(VAR_0x8004) == PARTY_NOTHING_CHOSEN)
                {
                    setvar(VAR_RESULT, NO)
                    return
                }
                else
                {
                    special(Rogue_ReleaseMonInSlot)
                }
            }

            setvar(VAR_RESULT, YES)
            return
        }
    }
    else
    {
        //bufferspeciesname(STR_VAR_1, VAR_0x8001)
        special(Rogue_BufferLabMonName)
        msgbox(format("(Poor {STR_VAR_1}…)\p(Must be lonely…)"))
    }

    setvar(VAR_RESULT, NO)
    return
}

script Rogue_Encounter_Lab_Pokeball_GiveMon
{
    //bufferspeciesname(STR_VAR_1, VAR_0x8001)
    special(Rogue_BufferLabMonName)

    special(Rogue_GiveLabMon)
    removeobject(VAR_LAST_TALKED)

    playfanfare(MUS_OBTAIN_ITEM)
    message(format("{PLAYER} obtained {STR_VAR_1}."))
    waitmessage
    waitfanfare

    quest_trigger(QUEST_TRIGGER_MAP_SPECIFIC_EVENT)

    if(var(VAR_0x8003) == TRUE)
    {
        specialvar(VAR_TEMP_2, IsCursed)
        if (var(VAR_TEMP_2) == TRUE)                       
        {
            setvar(VAR_RESULT, YES)
            playmoncry(SPECIES_DRAKLOAK, CRY_MODE_ENCOUNTER)
            msgbox(format("Oh!\nOh Wow!\n Would you look at ttttttthat!\pIt looks like {STR_VAR_1} is t{PAUSE 15}a{PAUSE 15}i{PAUSE 15}n{PAUSE 15}t{PAUSE 15}e{PAUSE 15}d{PAUSE 15}!")) //Changed this one because I think it communicates the eerieness overall?
            finditem(VAR_ROGUE_ITEM10, 1)
            call(Rogue_Common_DisplayPopups)
        
            copyvar(VAR_0x8004, VAR_ROGUE_ITEM10)
            callnative(ScriptMenu_ShowItemDescription)
            msgbox(format("You have been afflicted with a new Curse."), MSGBOX_DEFAULT)
            closemessage
            callnative(ScriptMenu_HideItemDescription)
        }
        else
        {
            msgbox(format("Great news! It doesn't look like {STR_VAR_1} is cursed!"))
            setvar(VAR_RESULT, NO)
        }
    }
}


script Rogue_Encounter_Lab_Pokeball0
{
    lock
    copyvar(VAR_0x8001, VAR_ROGUE_SPECIAL_ENCOUNTER_DATA)
    setvar(VAR_0x8002, 0)
    call(Rogue_Encounter_Lab_PokeballCommon)

    if(var(VAR_RESULT) == YES)
    {
        copyvar(VAR_0x8001, VAR_ROGUE_SPECIAL_ENCOUNTER_DATA)
        setvar(VAR_0x8002, 0)
        call(Rogue_Encounter_Lab_Pokeball_GiveMon)

        setflag(FLAG_SELECTED_MON)
        setflag(FLAG_TEMP_1)
    }

    release
}

script Rogue_Encounter_Lab_Pokeball1
{
    lock
    copyvar(VAR_0x8001, VAR_ROGUE_SPECIAL_ENCOUNTER_DATA1)
    setvar(VAR_0x8002, 1)
    call(Rogue_Encounter_Lab_PokeballCommon)

    if(var(VAR_RESULT) == YES)
    {
        copyvar(VAR_0x8001, VAR_ROGUE_SPECIAL_ENCOUNTER_DATA1)
        setvar(VAR_0x8002, 1)
        call(Rogue_Encounter_Lab_Pokeball_GiveMon)

        setflag(FLAG_SELECTED_MON)
        setflag(FLAG_TEMP_2)
    }

    release
}

script Rogue_Encounter_Lab_Pokeball2
{
    lock
    copyvar(VAR_0x8001, VAR_ROGUE_SPECIAL_ENCOUNTER_DATA2)
    setvar(VAR_0x8002, 2)
    call(Rogue_Encounter_Lab_PokeballCommon)

    if(var(VAR_RESULT) == YES)
    {
        copyvar(VAR_0x8001, VAR_ROGUE_SPECIAL_ENCOUNTER_DATA2)
        setvar(VAR_0x8002, 2)
        call(Rogue_Encounter_Lab_Pokeball_GiveMon)

        setflag(FLAG_SELECTED_MON)
        setflag(FLAG_TEMP_3)
    }

    release
}